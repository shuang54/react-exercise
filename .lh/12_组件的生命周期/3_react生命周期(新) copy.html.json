{
    "sourceFile": "12_组件的生命周期/3_react生命周期(新) copy.html",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1671690736472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1671690774417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,13 +11,13 @@\n <body>\r\n   <!-- 准备一个容器 -->\r\n   <div id=\"test\"></div>\r\n   <!-- react核心库 -->\r\n-  <script type=\"text/javascript\" src=\"../js/react.development.js\"></script>\r\n+  <script type=\"text/javascript\" src=\"../js/17.0.1/react.development.js\"></script>\r\n   <!-- 支持react操作DOM -->\r\n-  <script src=\"../js/react-dom.development.js\"></script>\r\n+  <script src=\"../js/17.0.1/react-dom.development.js\"></script>\r\n   <!-- 将jsx转为js -->\r\n-  <script type=\"text/javascript\" src=\"../js/babel.min.js\"></script>\r\n+  <script type=\"text/javascript\" src=\"../js/17.0.1/babel.min.js\"></script>\r\n   <!--  -->\r\n   <script type=\"text/babel\">\r\n     class Count extends React.Component{\r\n       constructor(props){\r\n"
                },
                {
                    "date": 1671690857408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,9 +155,8 @@\n       }\r\n       \r\n      // 组件将要接受新的数据\r\n      componentWillReceiveProps(props) {\r\n-       componentWillReceiveProps(props) {\r\n        console.log('B---componentWillReceiveProps');\r\n      }\r\n       render() {\r\n         console.log('B---render');\r\n"
                },
                {
                    "date": 1671690902403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n       force = () =>{\r\n         this.forceUpdate()\r\n       }\r\n       // 组件将要挂载\r\n-      componentWillMount(){\r\n+      UNSAFE_componentWillMount(){\r\n         console.log('Count---componentWillMount');\r\n       }\r\n       // 组件挂在完成\r\n       componentDidMount(){\r\n@@ -84,9 +84,9 @@\n         const { car } = this.state\r\n         this.setState({ car: !car })\r\n       }\r\n       // 组件将要挂载\r\n-      componentWillMount() {\r\n+      UNSAFE_componentWillMount() {\r\n         console.log('A---componentWillMount');\r\n       }\r\n       // 组件挂在完成\r\n       componentDidMount() {\r\n@@ -127,9 +127,9 @@\n         super(props)\r\n         console.log('B---constructor');\r\n       }\r\n       // 组件将要挂载\r\n-      componentWillMount() {\r\n+      UNSAFE_componentWillMount() {\r\n         console.log('B---componentWillMount');\r\n       }\r\n       // 组件挂在完成\r\n       componentDidMount() {\r\n"
                },
                {
                    "date": 1671690938964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,9 +154,9 @@\n         console.log('B---componentDidUpdate');\r\n       }\r\n       \r\n      // 组件将要接受新的数据\r\n-     componentWillReceiveProps(props) {\r\n+     UNSAFE_componentWillReceiveProps(props) {\r\n        console.log('B---componentWillReceiveProps');\r\n      }\r\n       render() {\r\n         console.log('B---render');\r\n"
                },
                {
                    "date": 1671690951694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n         console.log('Count---shouldComponentUpdate');\r\n         return true;\r\n       }\r\n       // 组件更新之前\r\n-      componentWillUpdate(){\r\n+      UNSAFE_componentWillUpdate(){\r\n         console.log('Count---componentWillUpdate');\r\n       }\r\n       // 组件更新之后\r\n       componentDidUpdate(){\r\n@@ -102,9 +102,9 @@\n         console.log('A---shouldComponentUpdate');\r\n         return true;\r\n       }\r\n       // 组件更新之前\r\n-      componentWillUpdate() {\r\n+      UNSAFE_componentWillUpdate() {\r\n         console.log('A---componentWillUpdate');\r\n       }\r\n       // 组件更新之后\r\n       componentDidUpdate() {\r\n@@ -145,9 +145,9 @@\n         console.log('B---shouldComponentUpdate');\r\n         return true;\r\n       }\r\n       // 组件更新之前\r\n-      componentWillUpdate() {\r\n+      UNSAFE_componentWillUpdate() {\r\n         console.log('B---componentWillUpdate');\r\n       }\r\n       // 组件更新之后\r\n       componentDidUpdate() {\r\n"
                },
                {
                    "date": 1671691623710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,104 +72,9 @@\n         )\r\n       }\r\n       \r\n     }\r\n-    class A extends React.Component{\r\n-\r\n-      constructor(props) {\r\n-        super(props)\r\n-        console.log('A---constructor');\r\n-        this.state = { car:true}\r\n-      }\r\n-       changeCar = () => {\r\n-        const { car } = this.state\r\n-        this.setState({ car: !car })\r\n-      }\r\n-      // 组件将要挂载\r\n-      UNSAFE_componentWillMount() {\r\n-        console.log('A---componentWillMount');\r\n-      }\r\n-      // 组件挂在完成\r\n-      componentDidMount() {\r\n-        console.log('A---componentDidMount');\r\n-      }\r\n-      // 组件卸载\r\n-      componentWillUnmount() {\r\n-        console.log('A---componentWillUnmount');\r\n-      }\r\n-\r\n-      // 组件是否更新的阀门\r\n-      shouldComponentUpdate() {\r\n-        console.log('A---shouldComponentUpdate');\r\n-        return true;\r\n-      }\r\n-      // 组件更新之前\r\n-      UNSAFE_componentWillUpdate() {\r\n-        console.log('A---componentWillUpdate');\r\n-      }\r\n-      // 组件更新之后\r\n-      componentDidUpdate() {\r\n-        console.log('A---componentDidUpdate');\r\n-      }\r\n-      render() {\r\n-        console.log('A---render');\r\n-        return (\r\n-          <div>\r\n-            <h2>我是A组件</h2>\r\n-            <button onClick={this.changeCar}>换车</button>\r\n-            <B car={this.state.car}/>\r\n-          </div>\r\n-        )\r\n-      }\r\n-    }\r\n-   class B extends React.Component {\r\n-\r\n-      constructor(props) {\r\n-        super(props)\r\n-        console.log('B---constructor');\r\n-      }\r\n-      // 组件将要挂载\r\n-      UNSAFE_componentWillMount() {\r\n-        console.log('B---componentWillMount');\r\n-      }\r\n-      // 组件挂在完成\r\n-      componentDidMount() {\r\n-        console.log('B---componentDidMount');\r\n-      }\r\n-      // 组件卸载\r\n-      componentWillUnmount() {\r\n-        console.log('B---componentWillUnmount');\r\n-      }\r\n-\r\n-      // 组件是否更新的阀门\r\n-      shouldComponentUpdate() {\r\n-        console.log('B---shouldComponentUpdate');\r\n-        return true;\r\n-      }\r\n-      // 组件更新之前\r\n-      UNSAFE_componentWillUpdate() {\r\n-        console.log('B---componentWillUpdate');\r\n-      }\r\n-      // 组件更新之后\r\n-      componentDidUpdate() {\r\n-        console.log('B---componentDidUpdate');\r\n-      }\r\n-      \r\n-     // 组件将要接受新的数据\r\n-     UNSAFE_componentWillReceiveProps(props) {\r\n-       console.log('B---componentWillReceiveProps');\r\n-     }\r\n-      render() {\r\n-        console.log('B---render');\r\n-        return (\r\n-          <div>\r\n-            <h2>我是B组件,我开{this.props.car?'宝马':'奔驰'}</h2>\r\n-          </div>\r\n-        )\r\n-      }\r\n-    }\r\n-    // ReactDOM.render(<Count/>,document.getElementById('test'))\r\n-    ReactDOM.render(<A/>,document.getElementById('test'))\r\n+    ReactDOM.render(<Count/>,document.getElementById('test'))\r\n   </script>\r\n </body>\r\n \r\n </html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1671691666687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,13 @@\n       // 组件更新之后\r\n       componentDidUpdate(){\r\n         console.log('Count---componentDidUpdate');\r\n       }\r\n+      // \r\n+      static getDerivedStateFromProps(props,state){\r\n+        console.log('Count---getDerivedStateFromProps');\r\n+        return props;\r\n+      }\r\n       render(){\r\n         console.log('Count---render');\r\n         return (\r\n           <div>\r\n"
                },
                {
                    "date": 1671691763412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,15 @@\n   <!-- 支持react操作DOM -->\r\n   <script src=\"../js/17.0.1/react-dom.development.js\"></script>\r\n   <!-- 将jsx转为js -->\r\n   <script type=\"text/javascript\" src=\"../js/17.0.1/babel.min.js\"></script>\r\n-  <!--  -->\r\n+  <!-- \r\n+     componentWillMount =>  UNSAFE_componentWillMount\r\n+     componentWillUpdate =>  UNSAFE_componentWillUpdate\r\n+     componentWillReceiveProps => UNSAFE_componentWillReceiveProps\r\n+\r\n+     static getDerivedStateFromProps(props,state)\r\n+   -->\r\n   <script type=\"text/babel\">\r\n     class Count extends React.Component{\r\n       constructor(props){\r\n         super(props)\r\n"
                },
                {
                    "date": 1671691850253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n       // 组件更新之后\r\n       componentDidUpdate(){\r\n         console.log('Count---componentDidUpdate');\r\n       }\r\n-      // \r\n+      // 若state的值任何时候都取决于props，则可以使用\r\n       static getDerivedStateFromProps(props,state){\r\n         console.log('Count---getDerivedStateFromProps');\r\n         return props;\r\n       }\r\n"
                },
                {
                    "date": 1671692751875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,8 +71,12 @@\n       static getDerivedStateFromProps(props,state){\r\n         console.log('Count---getDerivedStateFromProps');\r\n         return props;\r\n       }\r\n+      // DOM渲染之前保留的快照\r\n+      getSnapshotBeforeUpdate(prevProps,prevState){\r\n+        return null;\r\n+      }\r\n       render(){\r\n         console.log('Count---render');\r\n         return (\r\n           <div>\r\n"
                },
                {
                    "date": 1671692758569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n      componentWillUpdate =>  UNSAFE_componentWillUpdate\r\n      componentWillReceiveProps => UNSAFE_componentWillReceiveProps\r\n \r\n      static getDerivedStateFromProps(props,state)\r\n+      getSnapshotBeforeUpdate(prevProps,prevState){\r\n    -->\r\n   <script type=\"text/babel\">\r\n     class Count extends React.Component{\r\n       constructor(props){\r\n"
                }
            ],
            "date": 1671690736472,
            "name": "Commit-0",
            "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <title>Hello</title>\r\n</head>\r\n\r\n<body>\r\n  <!-- 准备一个容器 -->\r\n  <div id=\"test\"></div>\r\n  <!-- react核心库 -->\r\n  <script type=\"text/javascript\" src=\"../js/react.development.js\"></script>\r\n  <!-- 支持react操作DOM -->\r\n  <script src=\"../js/react-dom.development.js\"></script>\r\n  <!-- 将jsx转为js -->\r\n  <script type=\"text/javascript\" src=\"../js/babel.min.js\"></script>\r\n  <!--  -->\r\n  <script type=\"text/babel\">\r\n    class Count extends React.Component{\r\n      constructor(props){\r\n        super(props)\r\n        console.log('Count---constructor');\r\n        this.state = {count:1}\r\n      }\r\n\r\n      add = ()=>{\r\n        const {count} = this.state\r\n        this.setState({count:count+1,car:true})\r\n      }\r\n      \r\n      // 强制更新\r\n      force = () =>{\r\n        this.forceUpdate()\r\n      }\r\n      // 组件将要挂载\r\n      componentWillMount(){\r\n        console.log('Count---componentWillMount');\r\n      }\r\n      // 组件挂在完成\r\n      componentDidMount(){\r\n        console.log('Count---componentDidMount');\r\n      }\r\n      // 组件卸载\r\n      componentWillUnmount(){\r\n        console.log('Count---componentWillUnmount');\r\n      }\r\n\r\n      // 组件是否更新的阀门\r\n      shouldComponentUpdate(){\r\n        console.log('Count---shouldComponentUpdate');\r\n        return true;\r\n      }\r\n      // 组件更新之前\r\n      componentWillUpdate(){\r\n        console.log('Count---componentWillUpdate');\r\n      }\r\n      // 组件更新之后\r\n      componentDidUpdate(){\r\n        console.log('Count---componentDidUpdate');\r\n      }\r\n      render(){\r\n        console.log('Count---render');\r\n        return (\r\n          <div>\r\n            <h2>Count为{this.state.count}</h2>  \r\n            <button onClick={this.add}>count加1</button>\r\n            <button onClick={this.force}>强制更新</button>\r\n          </div>\r\n        )\r\n      }\r\n      \r\n    }\r\n    class A extends React.Component{\r\n\r\n      constructor(props) {\r\n        super(props)\r\n        console.log('A---constructor');\r\n        this.state = { car:true}\r\n      }\r\n       changeCar = () => {\r\n        const { car } = this.state\r\n        this.setState({ car: !car })\r\n      }\r\n      // 组件将要挂载\r\n      componentWillMount() {\r\n        console.log('A---componentWillMount');\r\n      }\r\n      // 组件挂在完成\r\n      componentDidMount() {\r\n        console.log('A---componentDidMount');\r\n      }\r\n      // 组件卸载\r\n      componentWillUnmount() {\r\n        console.log('A---componentWillUnmount');\r\n      }\r\n\r\n      // 组件是否更新的阀门\r\n      shouldComponentUpdate() {\r\n        console.log('A---shouldComponentUpdate');\r\n        return true;\r\n      }\r\n      // 组件更新之前\r\n      componentWillUpdate() {\r\n        console.log('A---componentWillUpdate');\r\n      }\r\n      // 组件更新之后\r\n      componentDidUpdate() {\r\n        console.log('A---componentDidUpdate');\r\n      }\r\n      render() {\r\n        console.log('A---render');\r\n        return (\r\n          <div>\r\n            <h2>我是A组件</h2>\r\n            <button onClick={this.changeCar}>换车</button>\r\n            <B car={this.state.car}/>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n   class B extends React.Component {\r\n\r\n      constructor(props) {\r\n        super(props)\r\n        console.log('B---constructor');\r\n      }\r\n      // 组件将要挂载\r\n      componentWillMount() {\r\n        console.log('B---componentWillMount');\r\n      }\r\n      // 组件挂在完成\r\n      componentDidMount() {\r\n        console.log('B---componentDidMount');\r\n      }\r\n      // 组件卸载\r\n      componentWillUnmount() {\r\n        console.log('B---componentWillUnmount');\r\n      }\r\n\r\n      // 组件是否更新的阀门\r\n      shouldComponentUpdate() {\r\n        console.log('B---shouldComponentUpdate');\r\n        return true;\r\n      }\r\n      // 组件更新之前\r\n      componentWillUpdate() {\r\n        console.log('B---componentWillUpdate');\r\n      }\r\n      // 组件更新之后\r\n      componentDidUpdate() {\r\n        console.log('B---componentDidUpdate');\r\n      }\r\n      \r\n     // 组件将要接受新的数据\r\n     componentWillReceiveProps(props) {\r\n       componentWillReceiveProps(props) {\r\n       console.log('B---componentWillReceiveProps');\r\n     }\r\n      render() {\r\n        console.log('B---render');\r\n        return (\r\n          <div>\r\n            <h2>我是B组件,我开{this.props.car?'宝马':'奔驰'}</h2>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n    // ReactDOM.render(<Count/>,document.getElementById('test'))\r\n    ReactDOM.render(<A/>,document.getElementById('test'))\r\n  </script>\r\n</body>\r\n\r\n</html>"
        }
    ]
}